name: Release

on:
  push:
    branches:
      - master
      - develop
    tags:
      - '*'

jobs:
  docker:
    if: github.repository == 'clowder-framework/clowder'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        name:
          - clowder
          - toolserver
          - mongo-init
          - monitor
          - check
        include:
          - name: clowder
            FOLDER: "."
            IMAGE: clowder
          - name: toolserver
            FOLDER: scripts/toollaunchservice
            IMAGE: toolserver
          - name: mongo-init
            FOLDER: scripts/mongo-init
            IMAGE: mongo-init
          - name: monitor
            FOLDER: scripts/monitor
            IMAGE: monitor
          - name: check
            FOLDER: scripts/check
            IMAGE: check
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          docker build \
            --build-arg BRANCH=${{ github.ref }} \
            --build-arg VERSION=${{ github.run_number }} \
            --build-arg BUILDNUMBER=${{ github.run_number }} \
            --build-arg GITSHA1=${{ github.sha  }} \
            --tag image ${{ matrix.FOLDER }}
      - name: Login into registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" -a -n "${{ secrets.DOCKERHUB_PASSWORD }}" ]; then
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          fi
      - name: Push image
        run: |
          # image all lowercase
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/${{ matrix.IMAGE }}
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          # all tags we will apply
          TMPVERSION="${VERSION}"
          OLDVERSION=""
          TAGS=""
          while [ "$OLDVERSION" != "$TMPVERSION" ]; do
            TAGS="${TAGS} ${TMPVERSION}"
            OLDVERSION="${TMPVERSION}"
            TMPVERSION=$(echo ${OLDVERSION} | sed 's/\.[0-9]*$//')
          done 
          if [ "${TAGS}" == "" ]; then
            TAGS="test"
          fi
          if [ "${TAGS}" == "master" ]; then
            TAGS="latest"
          fi

          # push all images
          for T in $TAGS; do
            docker tag image $IMAGE_ID:$T
            docker push $IMAGE_ID:$T
            if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" -a -n "${{ secrets.DOCKERHUB_PASSWORD }}" ]; then
              docker tag image clowder/${{ matrix.IMAGE }}:$T
              docker push clowder/${{ matrix.IMAGE }}:$T
            fi
          done
          

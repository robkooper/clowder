name: CI

on:
  release:
    types: created

  push:
    branches:
      - master
      - develop
      # - '*'

  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: print env
        run: env
      - name: sbt clean update
        run: ./sbt clean update
      - name: sbt compile
        run: ./sbt compile

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: sbt test
        run: ./sbt "test-only integration.APITestSuite"

  dist:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: sbt dist
        run: ./sbt dist
      - uses: actions/upload-artifact@v2
        with:
          name: clowder.zip
          path: target/universal/clowder-*.zip
      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@1.1.0
        if: github.event_name == 'release' && github.event.action == 'created'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          asset_name: clowder.zip
          file: target/universal/clowder-*.zip
          file_glob: true

  documentation:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: sbt doc
        run: ./sbt doc
      - uses: actions/upload-artifact@v2
        with:
          name: ScalaDoc
          path: target/scala-*/api/
      - name: sphinx
        run: |
          cd doc/src/sphinx/
          python -m pip install -r requirements.txt
          make html epub
      - uses: actions/upload-artifact@v2
        with:
          name: HTML Documentation
          path: doc/src/sphinx/_build/html
      - uses: actions/upload-artifact@v2
        with:
          name: EPUB Documentation
          path: doc/src/sphinx/_build/epub/Clowder.epub
      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@1.1.0
        if: github.event_name == 'release' && github.event.action == 'created'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          asset_name: clowder.epub
          file: doc/src/sphinx/_build/epub/Clowder.epub

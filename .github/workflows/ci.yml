name: CI

on:
  push:
    branches:
      - master
      - develop
      - '*'

    tags:
      - '*'

  pull_request:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: cache sbt packages
      uses: actions/cache@v1
      with:
        key: clowder-sbt-${{ github.sha }}
        path: ${{ env.R_LIBS }}
        restore-keys: |
          pkgcache-
    - name: cache .m2
      uses: actions/cache@v1
      with:
        key: clowder-m2-${{ github.sha }}
        path: .doc
    - name: cache .ivy
      uses: actions/cache@v1
      with:
        key: clowder-ivy-${{ github.sha }}
        path: .install
    - name: sbt clean update
      run: ./sbt clean update
    - name: sbt compile
      run: ./sbt compile

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: sbt test
        run: echo "test-only integration.APITestSuite"

  dist:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: sbt dist
        run: ./sbt dist

  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: doc
        run: ./sbt doc
      - name: sphinx
        run: |
          cd doc/src/sphinx/
          pip install -r requirements.txt
          make html

  docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        name:
          - clowder
          - toolserver
          - mongo-init
          - monitor
          - check
        include:
          - name: clowder
            FOLDER: "."
            IMAGE: clowder
          - name: toolserver
            FOLDER: scripts/toollaunchservice
            IMAGE: toolserver
          - name: mongo-init
            FOLDER: scripts/mongo-init
            IMAGE: mongo-init
          - name: monitor
            FOLDER: scripts/monitor
            IMAGE: monitor
          - name: check
            FOLDER: scripts/check
            IMAGE: check
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          docker build \
            --build-arg BRANCH=${{ github.ref }} \
            --build-arg VERSION=${{ github.run_number }} \
            --build-arg BUILDNUMBER=${{ github.run_number }} \
            --build-arg GITSHA1=${{ github.sha  }} \
            --tag image ${{ matrix.FOLDER }}


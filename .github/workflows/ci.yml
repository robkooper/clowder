name: CI

# on:
#   release:
#     types: published

#   push:
#     branches:
#       - master
#       - develop
#       - '*'
#     tags:
#       - '*'

#   pull_request:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: print env
        run: env
      - name: sbt clean update
        run: ./sbt clean update
      - name: sbt compile
        run: ./sbt compile

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mongodb:
        image: mongo:3.6
        ports:
          - 27017:27017
    steps:
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: sbt test
        run: ./sbt "test-only integration.APITestSuite"

  dist:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: sbt dist
        run: ./sbt dist
      - uses: actions/upload-artifact@v2
        with:
          name: clowder.zip
          path: target/universal/clowder-*.zip
      - name: find zip zipfile
        if: github.event_name == 'release' && github.event.action == 'published'
        id: distfile
        run: |
          echo "##[set-output name=zipfile;]$(/bin/ls -1rt target/universal/clowder-*.zip | tail -1)"
      - name: Upload to release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: JasonEtco/upload-to-release@master
        with:
          args: ${{ steps.distfile.outputs.zipfile }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  documentation:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache SBT ivy cache
        uses: actions/cache@v1
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
      - name: Cache SBT
        uses: actions/cache@v1
        with:
          path: ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: sbt doc
        run: ./sbt doc
      - uses: actions/upload-artifact@v2
        with:
          name: ScalaDoc
          path: target/scala-*/api/
      - name: sphinx
        run: |
          cd doc/src/sphinx/
          python -m pip install -r requirements.txt
          make html epub
      - uses: actions/upload-artifact@v2
        with:
          name: HTML Documentation
          path: doc/src/sphinx/_build/html
      - uses: actions/upload-artifact@v2
        with:
          name: EPUB Documentation
          path: doc/src/sphinx/_build/epub/Clowder.epub
      - name: Upload to release
        uses: JasonEtco/upload-to-release@master
        with:
          args: doc/src/sphinx/_build/epub/Clowder.epub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:        
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        name:
          - clowder
          - toolserver
          - mongo-init
          - monitor
          - check
        include:
          - name: clowder
            FOLDER: "."
            IMAGE: clowder
          - name: toolserver
            FOLDER: scripts/toollaunchservice
            IMAGE: toolserver
          - name: mongo-init
            FOLDER: scripts/mongo-init
            IMAGE: mongo-init
          - name: monitor
            FOLDER: scripts/monitor
            IMAGE: monitor
          - name: check
            FOLDER: scripts/check
            IMAGE: check
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: |
          docker build \
            --build-arg BRANCH=${{ github.ref }} \
            --build-arg VERSION=${{ github.run_number }} \
            --build-arg BUILDNUMBER=${{ github.run_number }} \
            --build-arg GITSHA1=${{ github.sha  }} \
            --tag image ${{ matrix.FOLDER }}

